// CSS3 PROPERTIES
// --------------------------------------------------

// Border Radius
@mixin border-radius($radius: 5px) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    border-radius: $radius;
}

// Drop shadows
@mixin box-shadow($shadow...) {
    -webkit-box-shadow: $shadow;
    -moz-box-shadow: $shadow;
    box-shadow: $shadow;
}

// Transitions
@mixin transition($transition...) {
    -webkit-transition: $transition;
    -moz-transition: $transition;
    -o-transition: $transition;
    transition: $transition;
}
@mixin transition-delay($transition-delay) {
    -webkit-transition-delay: $transition-delay;
    -moz-transition-delay: $transition-delay;
    -o-transition-delay: $transition-delay;
    transition-delay: $transition-delay;
}

// Transformations
@mixin rotate($degrees) {
    -webkit-transform: rotate($degrees);
    -moz-transform: rotate($degrees);
    -ms-transform: rotate($degrees);
    -o-transform: rotate($degrees);
    transform: rotate($degrees);
    filter: progid:DXImageTransform.Microsoft.BasicImage('rotation='$degress/90);
}
@mixin scale($x, $y) {
    -webkit-transform: scale($x, $y);
    -moz-transform: scale($x, $y);
    -ms-transform: scale($x, $y);
    -o-transform: scale($x, $y);
    transform: scale($x, $y);
}
@mixin translate($x, $y) {
    -webkit-transform: translate($x, $y);
    -moz-transform: translate($x, $y);
    -ms-transform: translate($x, $y);
    -o-transform: translate($x, $y);
    transform: translate($x, $y);
}
@mixin skew($x, $y) {
    -webkit-transform: skew($x, $y);
    -moz-transform: skew($x, $y);
  -ms-transform: skewX($x) skewY($y); // See https://github.com/twitter/bootstrap/issues/4885
  -o-transform: skew($x, $y);
  transform: skew($x, $y);
-webkit-backface-visibility: hidden; // See https://github.com/twitter/bootstrap/issues/5319
}
@mixin translate3d($x, $y, $z) {
    -webkit-transform: translate3d($x, $y, $z);
    -moz-transform: translate3d($x, $y, $z);
    -o-transform: translate3d($x, $y, $z);
    transform: translate3d($x, $y, $z);
}

// Backface visibility
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is `visible`, but can be changed to `hidden
// See git pull https://github.com/dannykeane/bootstrap.git backface-visibility for examples
@mixin backface-visibility($visibility){
    -webkit-backface-visibility: $visibility;
    -moz-backface-visibility: $visibility;
    backface-visibility: $visibility;
}

// Background clipping
// Heads up: FF 3.6 and under need "padding" instead of "padding-box"
@mixin background-clip($clip) {
    -webkit-background-clip: $clip;
    -moz-background-clip: $clip;
    background-clip: $clip;
}

// Background sizing
@mixin background-size($size) {
    -webkit-background-size: $size;
    -moz-background-size: $size;
    -o-background-size: $size;
    background-size: $size;
}


// Box sizing
@mixin box-sizing($boxmodel) {
    -webkit-box-sizing: $boxmodel;
    -moz-box-sizing: $boxmodel;
    box-sizing: $boxmodel;
}

// Box RGBA
@mixin box-rgba($r: 60, $g: 3, $b: 12, $opacity: 0.23, $color: #3C3C3C) {
    background-color: transparent;
    background-color: rgba($r, $g, $b, $opacity);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr#$color,endColorstr=$color);
    zoom: 1;
}

// User select
// For selecting text on the page
@mixin user-select($select) {
    -webkit-user-select: $select;
    -moz-user-select: $select;
    -ms-user-select: $select;
    -o-user-select: $select;
    user-select: $select;
}

// Resize anything
@mixin resizable($direction) {
resize: $direction; // Options: horizontal, vertical, both
overflow: auto; // Safari fix
}

// CSS3 Content Columns
@mixin content-columns($column-count, $column-gap: $gutter-width) {
    -webkit-column-count: $column-count;
    -moz-column-count: $column-count;
    column-count: $column-count;
    -webkit-column-gap: $column-gap;
    -moz-column-gap: $column-gap;
    column-gap: $column-gap;
}

// Optional hyphenation
@mixin hyphens($mode: auto) {
    word-wrap: break-word;
    -webkit-hyphens: $mode;
    -moz-hyphens: $mode;
    -ms-hyphens: $mode;
    -o-hyphens: $mode;
    hyphens: $mode;
}

// Appearance
@mixin appearance($ap) {
    $ap: unquote($ap);
    @include experimental(appearance, $ap, -moz, -webkit, not -o, not -ms, not -khtml, official);
}

// Opacity
@mixin opacity($opacity) {
    opacity: $opacity / 100;
    filter: alpha(opacity=$opacity);
}

// Text Shadow
@mixin single-text-shadow($hoff: false, $voff: false, $blur: false, $spread: false, $color: false) {

// A lot of people think the color comes first. It doesn't.
@if type-of($hoff) == color {
    $temp-color: $hoff;
    $hoff: $voff;
    $voff: $blur;
    $blur: $spread;
    $spread: $color;
    $color: $temp-color;
}

// Can't rely on default assignment with multiple supported argument orders.
$hoff: if($hoff, $hoff, $default-text-shadow-h-offset);
$voff: if($voff, $voff, $default-text-shadow-v-offset);
$blur: if($blur, $blur, $default-text-shadow-blur);
$spread: if($spread, $spread, $default-text-shadow-spread);
$color: if($color, $color, $default-text-shadow-color);

// We don't need experimental support for this property.
@if $color == none or $hoff == none {
    @include text-shadow(none); }
    @else {
        @include text-shadow(compact($hoff $voff $blur $spread $color));
    }
}


// FLEX BOX
// --------------------------------------------------

// CSS3 Flexible Box Model and property defaults

// Variables
$orient: horizontal;  // Box orientation [ horizontal | vertical | inline-axis | block-axis | inherit ]
$align: center;       // Box align [ start | end | center | baseline | stretch ]
$pack: center;        // Box pack [ start | end | center | justify ]

// Custom shorthand notation for flexbox
@mixin box($orient, $pack, $align) {
    @include display-box;
    @include box-orient($orient);
    @include box-pack($pack);
    @include box-align($align);
}


// BACKGROUNDS
// --------------------------------------------------

// Add an alphatransparency value to any background or border color (via Elyse Holladay)
@mixin translucent-background($color: $white, $alpha: 1) {
    background-color: hsla(hue($color), saturation($color), lightness($color), $alpha);
}

@mixin translucent-border($color: $white, $alpha: 1) {
    border-color: hsla(hue($color), saturation($color), lightness($color), $alpha);
    @include background-clip(padding-box);
}

// Gradient Bar Colors for buttons and alerts
@mixin gradientBar($primary-color, $secondary-color, $text-color: #fff, $text-shadow: 0 -1px 0 rgba(0,0,0,.25)) {
    color: $text-color;
    text-shadow: $text-shadow;
    @include gradient-vertical($primary-color, $secondary-color);
    border-color: $secondary-color $secondary-color darken($secondary-color, 15%);
    border-color: rgba(0,0,0,.1) rgba(0,0,0,.1) fade-in(rgba(0,0,0,.1), 0.15);
}

// Gradients
@mixin gradient-horizontal($start-color: #555, $end-color: #333) {
    background-color: $end-color;
background-image: -moz-linear-gradient(left, $start-color, $end-color); // FF 3.6+
background-image: -webkit-gradient(linear, 0 0, 100% 0, from($start-color), to($end-color)); // Safari 4+, Chrome 2+
background-image: -webkit-linear-gradient(left, $start-color, $end-color); // Safari 5.1+, Chrome 10+
background-image: -o-linear-gradient(left, $start-color, $end-color); // Opera 11.10
background-image: linear-gradient(to right, $start-color, $end-color); // Standard, IE10
background-repeat: repeat-x;
filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}', GradientType=1); // IE9 and down
}
@mixin gradient-vertical($start-color: #555, $end-color: #333) {
    background-color: mix($start-color, $end-color, 60%);
background-image: -moz-linear-gradient(top, $start-color, $end-color); // FF 3.6+
background-image: -webkit-gradient(linear, 0 0, 0 100%, from($start-color), to($end-color)); // Safari 4+, Chrome 2+
background-image: -webkit-linear-gradient(top, $start-color, $end-color); // Safari 5.1+, Chrome 10+
background-image: -o-linear-gradient(top, $start-color, $end-color); // Opera 11.10
background-image: linear-gradient(to bottom, $start-color, $end-color); // Standard, IE10
background-repeat: repeat-x;
filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}', GradientType=0); // IE9 and down
}
@mixin gradient-directional($start-color: #555, $end-color: #333, $deg: 45deg) {
    background-color: $end-color;
    background-repeat: repeat-x;
background-image: -moz-linear-gradient($deg, $start-color, $end-color); // FF 3.6+
background-image: -webkit-linear-gradient($deg, $start-color, $end-color); // Safari 5.1+, Chrome 10+
background-image: -o-linear-gradient($deg, $start-color, $end-color); // Opera 11.10
background-image: linear-gradient($deg, $start-color, $end-color); // Standard, IE10
}
@mixin gradient-vertical-three-colors($start-color: #00b3ee, $midColor: #7a43b6, $colorStop: 50%, $end-color: #c3325f) {
    background-color: mix($midColor, $end-color, 80%);
    background-image: -webkit-gradient(linear, 0 0, 0 100%, from($start-color), color-stop($colorStop, $midColor), to($end-color));
    background-image: -webkit-linear-gradient($start-color, $midColor $colorStop, $end-color);
    background-image: -moz-linear-gradient(top, $start-color, $midColor $colorStop, $end-color);
    background-image: -o-linear-gradient($start-color, $midColor $colorStop, $end-color);
    background-image: linear-gradient($start-color, $midColor $colorStop, $end-color);
    background-repeat: no-repeat;
filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}', GradientType=0); // IE9 and down, gets no color-stop at all for proper fallback
}
@mixin gradient-radial($inner-color: #555, $outer-color: #333)  {
    background-color: $outer-color;
    background-image: -webkit-gradient(radial, center center, 0, center center, 460, from($inner-color), to($outer-color));
    background-image: -webkit-radial-gradient(circle, $inner-color, $outer-color);
    background-image: -moz-radial-gradient(circle, $inner-color, $outer-color);
    background-image: -o-radial-gradient(circle, $inner-color, $outer-color);
    background-repeat: no-repeat;
}
@mixin gradient-striped($color: #555, $angle: 45deg) {
    background-color: $color;
    background-image: -webkit-gradient(linear, 0 100%, 100% 0, color-stop(.25, rgba(255,255,255,.15)), color-stop(.25, transparent), color-stop(.5, transparent), color-stop(.5, rgba(255,255,255,.15)), color-stop(.75, rgba(255,255,255,.15)), color-stop(.75, transparent), to(transparent));
    background-image: -webkit-linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-image: -moz-linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-image: -o-linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-image: linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
}
